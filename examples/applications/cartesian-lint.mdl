# Checks for any rules that
# CartesianProjectionWarning(P, i, Q): Field i in predicate P is always a projection of the same field in Q, without any filtering of Q's records.
# FIXME: include the offending rule (is that possible?)

IMPORT("p/t3.mdl", 'Program).

analyze ('Program) {
  InRHSOfSameRule($p, $p2) :- [ ... :- ..., $p(...), ..., $p2(...), ... . ].
  InRHSOfSameRule($p, $p2) :- [ ... :- ..., $p(...), ..., NOT($p2(...)), ... . ].
  InRHSOfSameRule($p, $p2) :- [ ... :- ..., NOT($p(...)), ..., $p2(...), ... . ].
  InRHSOfSameRule($p, $p2) :- [ ... :- ..., NOT($p(...)), ..., NOT($p2(...)), ... . ].
  InRHSOfSameRule($p2, $p) :- InRHSOfSameRule($p, $p2).

  VAL($x) :- INT($x, val).
  VAL($x) :- STR($x, val).
  PredicateIsFiltered($p) :- [ ... :- ..., $p(..., $x, ...), ... . ], VAL($x).
  PredicateIsFiltered($p) :- [ ... :- ..., $p(..., $x, ..., $y, ...), ... . ], ID($x, v), ID($y, v).
  PredicateIsFiltered($p) :-
          [ ... :- ..., $p(..., $x, ...), ... . ], ID($x, v),
          InRHSOfSameRule($p, $p2),
	  NOT(EQ($p, $p2)),
	  [ ... :- ..., $p2(..., $y, ...), ... . ], ID($y, v).

  PureProjection($p, $i, $q, $k, v) :-
      [ ..., $p(..., $i:$x, ...), ... :- ..., $q(..., $k:$y, ...), ... . ],
      ID($x, v),
      ID($y, v),
      NOT(PredicateIsFiltered($q)).

  ComputationallyInterestingOutput($p, $i, v) :-
      [ ..., $p(..., $i:$x, ...), ... :- ..., $q(..., $k:$y, ...), ... .],
      ID($x, v),
      ID($y, v),
      PredicateIsFiltered($q).

  OutputVariableIsFiltered(p, $i) :-
      [ ..., $p(..., $i:$x, ...), ... :- ... . ],
      ID($p, p),
      VAL($x). # not a variable

  OutputVariableIsFiltered(p, $i) :-
      [ ..., $p(..., $i:$x, ...), ... :- ... . ],
      ID($p, p),
      ID($x, v),
      ComputationallyInterestingOutput($p, $i, v).

  OutputVariableIsNontrivial(pname, $i) :-
      OutputVariableIsFiltered(pname, $i).

  OutputVariableIsNontrivial(pname, $i) :-
      PureProjection($p, $i, $q, $k, v),
      PureProjection($p2, $i, $q2, $k2, v2),
      ID($p, pname),
      ID($p2, pname),
      ID($q, qname),
      NOT(ID($q2, qname)).

  OutputVariableIsNontrivial(pname, $i) :-
      PureProjection($p, $i, $q, $k, v),
      PureProjection($p2, $i, $q2, $k2, v2),
      ID($p, pname),
      ID($p2, pname),
      NOT(EQ($k, $k2)).

  CartesianProjectionWarning(pname, $i) :-
      [ ..., $p(..., $i:$x, ...), ... :- ... .],
      ID($p, pname),
      NOT(OutputVariableIsNontrivial(pname, $i)).
}

OUTPUT('CartesianProjectionWarning).
