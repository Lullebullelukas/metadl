// Original grammar



Program ::= CommonClause* /FormalPredicate*/ ;
abstract CommonClause;
abstract Clause : CommonClause ::= Heads:CommonLiteral* ;
Rule : Clause ::= Body:CommonLiteral* ;
Fact : Clause;
AnalyzeBlock : CommonClause ::= ProgramRef:PredicateRef Clause* ;
abstract CommonLiteral;
abstract Literal : CommonLiteral ::= Predicate:PredicateSymbol ;
abstract BinaryExclusiveTermLiteral : Literal ::= Left:Expr Right:Expr ;
Atom : Literal ::= Terms:Term* ;
EDBLiteral : Literal ::= PredicateRef FileLoc:Term ;
OUTPUTLiteral : Literal ::= Term ;
NEGLiteral : Literal ::= Literal ;
BINDLiteral : Literal ::= Variable:CommonVariable Right:Expr ;
IMPORTLiteral : Literal ::= FileLoc:Term ProgramRef:PredicateRef ;
EQLiteral : BinaryExclusiveTermLiteral;
NEQLiteral : BinaryExclusiveTermLiteral;
LTLiteral : BinaryExclusiveTermLiteral;
LTELiteral : BinaryExclusiveTermLiteral;
GTLiteral : BinaryExclusiveTermLiteral;
GTELiteral : BinaryExclusiveTermLiteral;
abstract Expr;
Functor : Expr ::= Func:FunctorSymbol Arg:Expr* ;
abstract Term : Expr;
abstract Constant : Term;
abstract CommonVariable : Term;
Variable : CommonVariable ::= <VAR_ID:String> ;
Wildcard : CommonVariable;
PredicateRef : Constant ::= <PRED_ID:String> ;
StringConstant : Constant ::= <STRING:String> ;
IntConstant : Constant ::= <NUMERAL:String> ;
FormalPredicate ::= <PRED_ID:String> ;
PredicateSymbol ::= <PRED_ID:String> ;
FunctorSymbol ::= <FUNC_ID:String> ;
abstract MetaPattern : CommonLiteral;
Pattern : MetaPattern ::= <PATTERN:String> ;



// Pattern grammar
MetaVariable ::= <ID:String> ;
abstract MetaOrConcreteList;
MetaVarList : MetaElementList ::= Var:MetaVariable ;
abstract MetaElementList : MetaOrConcreteList;
GapList : MetaOrConcreteList;
ConcreteList : MetaElementList ::= ConcreteNode:List ;
abstract MetaOrConcreteOpt;
MetaVarOpt : MetaElementOpt ::= Var:MetaVariable ;
abstract MetaElementOpt : MetaOrConcreteOpt;
GapOpt : MetaOrConcreteOpt;
ConcreteOpt : MetaElementOpt ::= ConcreteNode:Opt ;
abstract MetaOrConcreteProgram ::= MetaOrConcreteCommonClause* ;
MetaVarProgram : MetaElementProgram ::= Var:MetaVariable ;
abstract MetaElementProgram : MetaOrConcreteProgram;
GapProgram : MetaOrConcreteProgram;
ConcreteProgram : MetaElementProgram ::= ConcreteNode:Program ;
abstract MetaOrConcreteCommonClause;
MetaVarCommonClause : MetaElementCommonClause ::= Var:MetaVariable ;
abstract MetaElementCommonClause : MetaOrConcreteCommonClause;
GapCommonClause : MetaOrConcreteCommonClause;
ConcreteCommonClause : MetaElementCommonClause ::= ConcreteNode:CommonClause ;
abstract MetaOrConcreteClause : MetaOrConcreteCommonClause ::= Heads:MetaOrConcreteCommonLiteral* ;
MetaVarClause : MetaElementClause ::= Var:MetaVariable ;
abstract MetaElementClause : MetaOrConcreteClause;
GapClause : MetaOrConcreteClause;
ConcreteClause : MetaElementClause ::= ConcreteNode:Clause ;
abstract MetaOrConcreteRule : MetaOrConcreteClause ::= Body:MetaOrConcreteCommonLiteral* ;
MetaVarRule : MetaElementRule ::= Var:MetaVariable ;
abstract MetaElementRule : MetaOrConcreteRule;
GapRule : MetaOrConcreteRule;
ConcreteRule : MetaElementRule ::= ConcreteNode:Rule ;
abstract MetaOrConcreteFact : MetaOrConcreteClause;
MetaVarFact : MetaElementFact ::= Var:MetaVariable ;
abstract MetaElementFact : MetaOrConcreteFact;
GapFact : MetaOrConcreteFact;
ConcreteFact : MetaElementFact ::= ConcreteNode:Fact ;
abstract MetaOrConcreteAnalyzeBlock : MetaOrConcreteCommonClause ::= ProgramRef:MetaOrConcretePredicateRef MetaOrConcreteClause* ;
MetaVarAnalyzeBlock : MetaElementAnalyzeBlock ::= Var:MetaVariable ;
abstract MetaElementAnalyzeBlock : MetaOrConcreteAnalyzeBlock;
GapAnalyzeBlock : MetaOrConcreteAnalyzeBlock;
ConcreteAnalyzeBlock : MetaElementAnalyzeBlock ::= ConcreteNode:AnalyzeBlock ;
abstract MetaOrConcreteCommonLiteral;
MetaVarCommonLiteral : MetaElementCommonLiteral ::= Var:MetaVariable ;
abstract MetaElementCommonLiteral : MetaOrConcreteCommonLiteral;
GapCommonLiteral : MetaOrConcreteCommonLiteral;
ConcreteCommonLiteral : MetaElementCommonLiteral ::= ConcreteNode:CommonLiteral ;
abstract MetaOrConcreteLiteral : MetaOrConcreteCommonLiteral ::= Predicate:MetaOrConcretePredicateSymbol ;
MetaVarLiteral : MetaElementLiteral ::= Var:MetaVariable ;
abstract MetaElementLiteral : MetaOrConcreteLiteral;
GapLiteral : MetaOrConcreteLiteral;
ConcreteLiteral : MetaElementLiteral ::= ConcreteNode:Literal ;
abstract MetaOrConcreteBinaryExclusiveTermLiteral : MetaOrConcreteLiteral ::= Left:MetaOrConcreteExpr Right:MetaOrConcreteExpr ;
MetaVarBinaryExclusiveTermLiteral : MetaElementBinaryExclusiveTermLiteral ::= Var:MetaVariable ;
abstract MetaElementBinaryExclusiveTermLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
GapBinaryExclusiveTermLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
ConcreteBinaryExclusiveTermLiteral : MetaElementBinaryExclusiveTermLiteral ::= ConcreteNode:BinaryExclusiveTermLiteral ;
abstract MetaOrConcreteAtom : MetaOrConcreteLiteral ::= Terms:MetaOrConcreteTerm* ;
MetaVarAtom : MetaElementAtom ::= Var:MetaVariable ;
abstract MetaElementAtom : MetaOrConcreteAtom;
GapAtom : MetaOrConcreteAtom;
ConcreteAtom : MetaElementAtom ::= ConcreteNode:Atom ;
abstract MetaOrConcreteEDBLiteral : MetaOrConcreteLiteral ::= MetaOrConcretePredicateRef FileLoc:MetaOrConcreteTerm ;
MetaVarEDBLiteral : MetaElementEDBLiteral ::= Var:MetaVariable ;
abstract MetaElementEDBLiteral : MetaOrConcreteEDBLiteral;
GapEDBLiteral : MetaOrConcreteEDBLiteral;
ConcreteEDBLiteral : MetaElementEDBLiteral ::= ConcreteNode:EDBLiteral ;
abstract MetaOrConcreteOUTPUTLiteral : MetaOrConcreteLiteral ::= MetaOrConcreteTerm ;
MetaVarOUTPUTLiteral : MetaElementOUTPUTLiteral ::= Var:MetaVariable ;
abstract MetaElementOUTPUTLiteral : MetaOrConcreteOUTPUTLiteral;
GapOUTPUTLiteral : MetaOrConcreteOUTPUTLiteral;
ConcreteOUTPUTLiteral : MetaElementOUTPUTLiteral ::= ConcreteNode:OUTPUTLiteral ;
abstract MetaOrConcreteNEGLiteral : MetaOrConcreteLiteral ::= MetaOrConcreteLiteral ;
MetaVarNEGLiteral : MetaElementNEGLiteral ::= Var:MetaVariable ;
abstract MetaElementNEGLiteral : MetaOrConcreteNEGLiteral;
GapNEGLiteral : MetaOrConcreteNEGLiteral;
ConcreteNEGLiteral : MetaElementNEGLiteral ::= ConcreteNode:NEGLiteral ;
abstract MetaOrConcreteBINDLiteral : MetaOrConcreteLiteral ::= Variable:MetaOrConcreteCommonVariable Right:MetaOrConcreteExpr ;
MetaVarBINDLiteral : MetaElementBINDLiteral ::= Var:MetaVariable ;
abstract MetaElementBINDLiteral : MetaOrConcreteBINDLiteral;
GapBINDLiteral : MetaOrConcreteBINDLiteral;
ConcreteBINDLiteral : MetaElementBINDLiteral ::= ConcreteNode:BINDLiteral ;
abstract MetaOrConcreteIMPORTLiteral : MetaOrConcreteLiteral ::= FileLoc:MetaOrConcreteTerm ProgramRef:MetaOrConcretePredicateRef ;
MetaVarIMPORTLiteral : MetaElementIMPORTLiteral ::= Var:MetaVariable ;
abstract MetaElementIMPORTLiteral : MetaOrConcreteIMPORTLiteral;
GapIMPORTLiteral : MetaOrConcreteIMPORTLiteral;
ConcreteIMPORTLiteral : MetaElementIMPORTLiteral ::= ConcreteNode:IMPORTLiteral ;
abstract MetaOrConcreteEQLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarEQLiteral : MetaElementEQLiteral ::= Var:MetaVariable ;
abstract MetaElementEQLiteral : MetaOrConcreteEQLiteral;
GapEQLiteral : MetaOrConcreteEQLiteral;
ConcreteEQLiteral : MetaElementEQLiteral ::= ConcreteNode:EQLiteral ;
abstract MetaOrConcreteNEQLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarNEQLiteral : MetaElementNEQLiteral ::= Var:MetaVariable ;
abstract MetaElementNEQLiteral : MetaOrConcreteNEQLiteral;
GapNEQLiteral : MetaOrConcreteNEQLiteral;
ConcreteNEQLiteral : MetaElementNEQLiteral ::= ConcreteNode:NEQLiteral ;
abstract MetaOrConcreteLTLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarLTLiteral : MetaElementLTLiteral ::= Var:MetaVariable ;
abstract MetaElementLTLiteral : MetaOrConcreteLTLiteral;
GapLTLiteral : MetaOrConcreteLTLiteral;
ConcreteLTLiteral : MetaElementLTLiteral ::= ConcreteNode:LTLiteral ;
abstract MetaOrConcreteLTELiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarLTELiteral : MetaElementLTELiteral ::= Var:MetaVariable ;
abstract MetaElementLTELiteral : MetaOrConcreteLTELiteral;
GapLTELiteral : MetaOrConcreteLTELiteral;
ConcreteLTELiteral : MetaElementLTELiteral ::= ConcreteNode:LTELiteral ;
abstract MetaOrConcreteGTLiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarGTLiteral : MetaElementGTLiteral ::= Var:MetaVariable ;
abstract MetaElementGTLiteral : MetaOrConcreteGTLiteral;
GapGTLiteral : MetaOrConcreteGTLiteral;
ConcreteGTLiteral : MetaElementGTLiteral ::= ConcreteNode:GTLiteral ;
abstract MetaOrConcreteGTELiteral : MetaOrConcreteBinaryExclusiveTermLiteral;
MetaVarGTELiteral : MetaElementGTELiteral ::= Var:MetaVariable ;
abstract MetaElementGTELiteral : MetaOrConcreteGTELiteral;
GapGTELiteral : MetaOrConcreteGTELiteral;
ConcreteGTELiteral : MetaElementGTELiteral ::= ConcreteNode:GTELiteral ;
abstract MetaOrConcreteExpr;
MetaVarExpr : MetaElementExpr ::= Var:MetaVariable ;
abstract MetaElementExpr : MetaOrConcreteExpr;
GapExpr : MetaOrConcreteExpr;
ConcreteExpr : MetaElementExpr ::= ConcreteNode:Expr ;
abstract MetaOrConcreteFunctor : MetaOrConcreteExpr ::= Func:MetaOrConcreteFunctorSymbol Arg:MetaOrConcreteExpr* ;
MetaVarFunctor : MetaElementFunctor ::= Var:MetaVariable ;
abstract MetaElementFunctor : MetaOrConcreteFunctor;
GapFunctor : MetaOrConcreteFunctor;
ConcreteFunctor : MetaElementFunctor ::= ConcreteNode:Functor ;
abstract MetaOrConcreteTerm : MetaOrConcreteExpr;
MetaVarTerm : MetaElementTerm ::= Var:MetaVariable ;
abstract MetaElementTerm : MetaOrConcreteTerm;
GapTerm : MetaOrConcreteTerm;
ConcreteTerm : MetaElementTerm ::= ConcreteNode:Term ;
abstract MetaOrConcreteConstant : MetaOrConcreteTerm;
MetaVarConstant : MetaElementConstant ::= Var:MetaVariable ;
abstract MetaElementConstant : MetaOrConcreteConstant;
GapConstant : MetaOrConcreteConstant;
ConcreteConstant : MetaElementConstant ::= ConcreteNode:Constant ;
abstract MetaOrConcreteCommonVariable : MetaOrConcreteTerm;
MetaVarCommonVariable : MetaElementCommonVariable ::= Var:MetaVariable ;
abstract MetaElementCommonVariable : MetaOrConcreteCommonVariable;
GapCommonVariable : MetaOrConcreteCommonVariable;
ConcreteCommonVariable : MetaElementCommonVariable ::= ConcreteNode:CommonVariable ;
abstract MetaOrConcreteVariable : MetaOrConcreteCommonVariable;
MetaVarVariable : MetaElementVariable ::= Var:MetaVariable ;
abstract MetaElementVariable : MetaOrConcreteVariable;
GapVariable : MetaOrConcreteVariable;
ConcreteVariable : MetaElementVariable ::= ConcreteNode:Variable ;
abstract MetaOrConcreteWildcard : MetaOrConcreteCommonVariable;
MetaVarWildcard : MetaElementWildcard ::= Var:MetaVariable ;
abstract MetaElementWildcard : MetaOrConcreteWildcard;
GapWildcard : MetaOrConcreteWildcard;
ConcreteWildcard : MetaElementWildcard ::= ConcreteNode:Wildcard ;
abstract MetaOrConcretePredicateRef : MetaOrConcreteConstant;
MetaVarPredicateRef : MetaElementPredicateRef ::= Var:MetaVariable ;
abstract MetaElementPredicateRef : MetaOrConcretePredicateRef;
GapPredicateRef : MetaOrConcretePredicateRef;
ConcretePredicateRef : MetaElementPredicateRef ::= ConcreteNode:PredicateRef ;
abstract MetaOrConcreteStringConstant : MetaOrConcreteConstant;
MetaVarStringConstant : MetaElementStringConstant ::= Var:MetaVariable ;
abstract MetaElementStringConstant : MetaOrConcreteStringConstant;
GapStringConstant : MetaOrConcreteStringConstant;
ConcreteStringConstant : MetaElementStringConstant ::= ConcreteNode:StringConstant ;
abstract MetaOrConcreteIntConstant : MetaOrConcreteConstant;
MetaVarIntConstant : MetaElementIntConstant ::= Var:MetaVariable ;
abstract MetaElementIntConstant : MetaOrConcreteIntConstant;
GapIntConstant : MetaOrConcreteIntConstant;
ConcreteIntConstant : MetaElementIntConstant ::= ConcreteNode:IntConstant ;
abstract MetaOrConcreteFormalPredicate;
MetaVarFormalPredicate : MetaElementFormalPredicate ::= Var:MetaVariable ;
abstract MetaElementFormalPredicate : MetaOrConcreteFormalPredicate;
GapFormalPredicate : MetaOrConcreteFormalPredicate;
ConcreteFormalPredicate : MetaElementFormalPredicate ::= ConcreteNode:FormalPredicate ;
abstract MetaOrConcretePredicateSymbol;
MetaVarPredicateSymbol : MetaElementPredicateSymbol ::= Var:MetaVariable ;
abstract MetaElementPredicateSymbol : MetaOrConcretePredicateSymbol;
GapPredicateSymbol : MetaOrConcretePredicateSymbol;
ConcretePredicateSymbol : MetaElementPredicateSymbol ::= ConcreteNode:PredicateSymbol ;
abstract MetaOrConcreteFunctorSymbol;
MetaVarFunctorSymbol : MetaElementFunctorSymbol ::= Var:MetaVariable ;
abstract MetaElementFunctorSymbol : MetaOrConcreteFunctorSymbol;
GapFunctorSymbol : MetaOrConcreteFunctorSymbol;
ConcreteFunctorSymbol : MetaElementFunctorSymbol ::= ConcreteNode:FunctorSymbol ;
abstract MetaOrConcreteMetaPattern : MetaOrConcreteCommonLiteral;
MetaVarMetaPattern : MetaElementMetaPattern ::= Var:MetaVariable ;
abstract MetaElementMetaPattern : MetaOrConcreteMetaPattern;
GapMetaPattern : MetaOrConcreteMetaPattern;
ConcreteMetaPattern : MetaElementMetaPattern ::= ConcreteNode:MetaPattern ;
abstract MetaOrConcretePattern : MetaOrConcreteMetaPattern;
MetaVarPattern : MetaElementPattern ::= Var:MetaVariable ;
abstract MetaElementPattern : MetaOrConcretePattern;
GapPattern : MetaOrConcretePattern;
ConcretePattern : MetaElementPattern ::= ConcreteNode:Pattern ;
