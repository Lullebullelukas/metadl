/**
	Program
**/
Program  ::= CommonClause* /FormalPredicate*/;

/**
   Clause
**/
abstract CommonClause;
abstract Clause : CommonClause ::= Heads:CommonLiteral*;
Rule:Clause ::= Body:CommonLiteral*;
Fact:Clause;
AnalyzeBlock:CommonClause ::= ProgramRef:PredicateRef Clause*;

/**
   Literals
**/
abstract CommonLiteral;
abstract Literal:CommonLiteral ::= Predicate:PredicateSymbol;
abstract BinaryExclusiveTermLiteral:Literal ::= Left:Expr Right:Expr;

Atom:Literal          ::= Terms:Term*;
EDBLiteral:Literal    ::= PredicateRef FileLoc:Term;
OUTPUTLiteral:Literal ::= Term;
NEGLiteral:Literal    ::= Literal;

BINDLiteral:Literal ::= Variable:CommonVariable Right:Expr;
IMPORTLiteral:Literal ::= FileLoc:Term ProgramRef:PredicateRef;

EQLiteral:BinaryExclusiveTermLiteral;
NEQLiteral:BinaryExclusiveTermLiteral;
LTLiteral:BinaryExclusiveTermLiteral;
LTELiteral:BinaryExclusiveTermLiteral;
GTLiteral:BinaryExclusiveTermLiteral;
GTELiteral:BinaryExclusiveTermLiteral;

/**
	Expressions
**/
abstract Expr;
Functor : Expr ::= Func:FunctorSymbol Arg:Expr*;

/**
    Terms
**/
abstract Term:Expr;
abstract Constant:Term;
abstract CommonVariable:Term;

Variable:CommonVariable ::= <VAR_ID>;
PredicateRef:Constant   ::= <PRED_ID>;
StringConstant:Constant ::= <STRING>;
IntConstant:Constant    ::= <NUMERAL>;
TermList:Constant       ::= Terms:Term*;

/**
    PredicateSymbols
**/
FormalPredicate ::= <PRED_ID>;
PredicateSymbol ::= <PRED_ID>;
FunctorSymbol ::= <FUNC_ID>;

/**
   Patterns
**/
abstract MetaPattern : CommonLiteral;
Pattern : MetaPattern ::= <PATTERN>;
