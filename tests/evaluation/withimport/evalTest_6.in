# Stratification in Datalog example

IMPORT("tests/evaluation/withimport/evalTest_6_input.mdl", 'Program).

analyze ('Program) {
	DirectDep(p_name, q_name) :- [...,$p(...),... :- ...,$q(...),... .], ID($p, p_name), ID($q, q_name).
	DirectDepNeg(p_name, q_name),DirectDep(p_name, q_name) :- [...,$p(...),... :- ...,NOT($q(...)),... .],
			     			       	  ID($p, p_name), ID($q, q_name).
}

Dep(p_name, q_name) :- DirectDep(p_name, q_name).
Dep(p_name, q_name) :- Dep(p_name, r_name), DirectDep(r_name, q_name).

# Terminal predicates are predicates that no other predicates depends on.
# They form the 0 stratum. When we will be able to analyze OUTPUT predicates,
# the predicates refered by the OUTPUT should form the 0 stratum instead.


NonTerminal(p_name) :- Dep(x, p_name).
Terminal(q_name) :- Dep(q_name, x), NOT(NonTerminal(q_name)).

# Compute a stratum relative to a terminal predicate
Stratum(root, 0) :- Terminal(root).
Stratum(q_name, i) :- Dep(p_name, q_name), Dep(q_name, p_name), Stratum(p_name, i).
Stratum(q_name, i) :- Stratum(p_name, j), DirectDep(p_name, q_name), NOT(Dep(q_name, p_name)), BIND(i, j+1).

# Non-strafiable dependency due to negation
NonStratDep(p_name, q_name) :- Stratum(p_name, i), Stratum(q_name, i), DirectDepNeg(p_name, q_name).

OUTPUT('Stratum).
OUTPUT('Dep).
OUTPUT('Terminal).
OUTPUT('NonStratDep).